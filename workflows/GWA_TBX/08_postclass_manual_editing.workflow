.NAME:Segmentation for Manual Editing
.GROUP:Post-processing
.ALGORITHM:workflowtools:workflowinstructions
.PARAMETERS:{}
.MODE:Normal
.INSTRUCTIONS:<img src="images/GlobWetland_Africa.png" alt="GWA_logo" width=250 align="right">
<br>
# Segmentation for Manual Editing
<br><br>

## Objective of workflow
This post-processing workflow allow users to apply a segmentation routine to any thematic map to allow for manual editing i.e. manual selection and reclassification of segments in problematic regions.

## Workflow dependencies
This workflow can be used for post-processing of thematic outputs generated by the Wetland Inventory, the Wetland Habitat and Mangroves Mapping workflows.

!INSTRUCTIONS
.ALGORITHM:gdal:translate
.PARAMETERS:{"ZLEVEL": 6, "PROJWIN": "302460.0,349900.0,1497330.0,1562640.0", "SDS": false, "OUTSIZE": 100, "OUTSIZE_PERC": true, "RTYPE": 5, "COMPRESS": 4, "NO_DATA": "-32768", "BIGTIFF": 0, "TILED": false, "JPEGCOMPRESSION": 75, "TFW": false, "PREDICTOR": 1, "EXPAND": 0, "EXTRA": ""}
.MODE:Normal
.INSTRUCTIONS:# Prepare input data

This first step of the workflow assures the Nodata value is correctly defined. Evaluate the classified image to verify that the Nodata values should be -32768. If this is not the case change the settings here.

## Settings

**Input layers**:Select the result image of the classification created in the GlobWetland Africa Toolbox Magrove Characterisation workflow.

**Nodata value**: -32768
(Change this value if you are working on a different dataset having another nodata value)

**Subset based on georeferenced coordinates**: Select a subset to post process or keep the default values to process the entire image.

**Converted**: Define the output directory and image name. The output image should be called 01_PostClass_['enter name'].tif
!INSTRUCTIONS
.ALGORITHM:gdal:polygonize
.PARAMETERS:{"FIELD": "Class"}
.MODE:Normal
.INSTRUCTIONS:# Vectorize classification

In this step the classified raster image is converted to a vector layer.

## Settings

**Input layer**: Select the .tif file created from the previous step - 01_PostClass_['enter name'].tif

**Output field name**: Here the field name of the output file is defined. Type "Class" here.

**Vectorized**: Define the output directory and file name. The output vector file should be called 02_PostClass_['enter name'].shp
!INSTRUCTIONS
.ALGORITHM:script:preparepostprocessingstack
.PARAMETERS:{"B10": false, "B4s": false, "B5": false, "B6": false, "B7": true, "B1": true, "B2": true, "B3": true, "B8": false, "B9": false}
.MODE:Normal
.INSTRUCTIONS:# Stack input files

In this step the classified raster image and the reflectance bands (Red, Green, Blue and NIR)  are stacked into a .tif file. The reflectance image file is generated from GlobWetland Africa toolbox I/O Sentinel-2 Preprocessing step 4

## Settings

**Input Stack**:  Select the .tif file with the reflectance values.

Select:
Band 1: (Blue band)
Band 2: (Green band)
Band 3: (Red band)
Band 7: (NIR band)


**Classification Raster**:
Input the file  01_PostClass_['enter name'].tif from step 1.
The classification raster should be an integer file having the values: 1,2,3 etc. for each class in the classification

**Output Stack for Segmentation**: Define the output directory and vrt file name. The output image should be called 03_PostClass_['enter name'].tif
!INSTRUCTIONS
.ALGORITHM:otb:segmentationmeanshift
.PARAMETERS:{"-mode.vector.startlabel": 1, "-mode.vector.simplify": 0.1, "-mode.vector.outmode": 0, "-mode": 0, "-filter.meanshift.thres": 0.1, "-mode.vector.layername": "layer", "-mode.vector.ogroptions": "", "-mode.vector.fieldname": "DN", "-filter.meanshift.maxiter": 100, "-filter.meanshift.spatialr": 1, "-filter.meanshift.minsize": 100, "-filter.meanshift.ranger": 100, "-mode.vector.minsize": 1, "-mode.vector.stitch": true, "-mode.vector.neighbor": true, "-filter": 0, "-mode.vector.tilesize": 1024}
.MODE:Normal
.INSTRUCTIONS:# Perform segmentation

This step performs a segmentation of the mangrove classification in combination with the spectral 10m bands stacked in step 4 of this workflow in the .tif file.

There are a large number of variables that can be changed, however, keep default values except the "Range radius". Changing this variable will influence the size of the segments.

## Settings

**Input image**: 03_PostClass_ClassificationMap.tif

**Range radius**: 100

**Output vector file**: 04_Segmentation_['enter name'].shp

## Notes
In the next and final step of this workflow the result of the segmentation will be intersected by the vectorised classification. In this way the new segments are combined into the original classification and a manual editing is possible using the segments created.
!INSTRUCTIONS
.ALGORITHM:grass7:v.overlay
.PARAMETERS:{"GRASS_SNAP_TOLERANCE_PARAMETER": -1, "GRASS_MIN_AREA_PARAMETER": 0, "atype": 0, "GRASS_OUTPUT_TYPE_PARAMETER": 0, "-t": false, "operator": 0, "GRASS_REGION_PARAMETER": null}
.MODE:Normal
.INSTRUCTIONS:# Merge vectors

During this step two shapefiles are intersected using the v.overlay tool from GRAS GIS 7.

The vectorised classification from step 2 will be intersected with the segmentation created in step 4 of this workflow.

## Settings

**Input layer (A)**: 02_PostClass_['enter name'].shp

**Input layer (A) Type**: area

**Input layer (B)**: 04_Segmentation_['enter name'].shp

**Operator to use**: "and"

**Overlay (Output file)**: 05_Intersection_['enter name'].shp


## Notes
The output file from this step is the file that can be used in the manual editing process of the classification.

Note that this step might take a while if running on the entire area of interest. For the area used in this exercise the processing time is about 1 hour.
!INSTRUCTIONS
.ALGORITHM:qgis:refactorfields
.PARAMETERS:{}
.MODE:Normal
.INSTRUCTIONS:# Prepare output vector for manual editing

In this final step the superfluous fields can be removed from the attribute table of the resulting shapefile from the previous step.

## Settings

**Input layer**: Select the shapefile generated from step 6.

**Load fields from layer**: Select the shapefile generated from step 5 and press the "Load fields" button.

Now in the Field Mapping window manually mark the Rows that should be removed as described below:

Mark Row "a_cat" and press the "Delete Selected field" button (Red x)

Mark Row "b_cat" and press the "Delete Selected field" button (Red x)

Mark Row "b_DN" and press the "Delete Selected field" button (Red x)

The field to keep is the one having information about the class. When the only field listed in the Field mapping window is "a_Class" you are ready for creating the final output shapefile.

**Refactored**: Select the folder and the file name of the resulting shapefile that will be ready for manual editing: 06_PostClass_['enter name'].shp

When ready press the "Run" button
!INSTRUCTIONS
